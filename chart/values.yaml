name: icon-logs
networkName: mainnet

deployment:
  image:
    repository: 868027517775.dkr.ecr.us-west-2.amazonaws.com/icon-logs
    tag: latest
    pullPolicy: IfNotPresent
  replicaCount: 1
  # Defines additional annotations for app pods. This should be formatted as a multi-line string.
  #
  # ```yaml
  # annotations: |
  #   "sample/annotation1": "foo"
  #   "sample/annotation2": "bar"
  # ```
  annotations: null
  resources:
    requests:
      cpu: "0.25"
      memory: "256Mi"
    limits:
      cpu: "1"
      memory: "1024Mi"
  backendAPIRoot: https://users.example.com

autoscaler:
  enabled: true
  maxReplicas: 25
  averageCPU: 50

service:
  name: icon-logs
  type: ClusterIP
  externalPort: 80

ingress:
  enabled: true
  regionalHost: "app.region.example.com"
  apexHost: "app.example.com"
  annotations: null

api:
  replicaCount: 1

  # Ports
  internalPort: 80
  healthPort: 9300
  metricsPort: 9400

  # Prefixes
  restPrefix: api/v1
  websocketPrefix: /ws
  healthPrefix: /healthcheck
  metricsPrefix: metrics

  # Monitoring
  healthPollingInterval: 1
  logLevel: debug
  logToFile: true
  logFileName: "./api.log"

  # DB
  dbUser: mongo
  dbPassword: changethis

worker:
  replicaCount: 1

  # Ports
  healthPort: 9300
  metricsPort: 9400

  # Prefixes
  restPrefix: api/v1
  websocketPrefix: /ws
  healthPrefix: /healthcheck
  metricsPrefix: metrics

  # Monitoring
  healthPollingInterval: 1
  logLevel: debug
  logToFile: true
  logFileName: "./worker.log"

  # DB
  dbUser: postgres
  dbPassword: changeme

# Kafka
kafka:
  kafkaBrokerURL: ""
  schemaRegistryURL: ""
  kafkaGroupID: websocket-group
  consumerTopics: "[logs]"
  producerTopics: "[logs-ws]"
  schemaNameTopics: "{\"logs\": \"block_raw\", \"logs-ws\": \"block\"}"

db:
  dbDriver: postgres
  dbHost: localhost
  dbPort: 5432
  dbName: logs
  dbSslmode: disable
  dbTimezone: UTC
